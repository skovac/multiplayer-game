#!/usr/bin/python3

import pygame as pg
import time
import socket
import threading

import sys

sys.path.append("src/")
import server_com
from util_classes import *


def keyboard_event_handler(player, pressed, sock):
    if pressed[pg.K_LEFT]:
        player.move_left()
    if pressed[pg.K_RIGHT]:
        player.move_right()
    if pressed[pg.K_UP]:
        player.move_up()
    if pressed[pg.K_DOWN]:
        player.move_down()
    if pressed[pg.K_SPACE]:
        player.proj.shoot(player.x, player.y, player.width)
    if pressed[pg.K_q]:
        server_com.stop_connection(sock)
        exit()


def server_loop(player, oppPlayer, sock):
    while not oppPlayer.disconnected:
        oppPlayer.fromJson(server_com.send_to_server(sock, player))


def main():
    WIDTH = 400
    HEIGHT = 400
    try:
        PLAYERID = sys.argv[1]
    except:
        PLAYERID = "default"

    screen = pg.display.set_mode((WIDTH, HEIGHT))
    pg.init()

    playerWidth = playerHeight = 35
    startx = (WIDTH / 2) - (playerWidth / 2) 
    starty = HEIGHT - 50
    
    player = PlayerShip(startx, starty, 35, 35, WIDTH, HEIGHT, 2, screen)
    oppPlayer = PlayerShip(startx, 50, 35, 35, WIDTH, HEIGHT, 0, screen)
    oppPlayer.rotate_pic()
    
    sock = server_com.get_socket(PLAYERID)
    if not sock:
        print ("[ERROR] Connection failed")
        return

    serverThread = threading.Thread(target=server_loop, args=(player, oppPlayer, sock))
    serverThread.start()

    while not oppPlayer.disconnected:
        for event in pg.event.get():
            if event.type == pg.QUIT:
                run = False

        keyboard_event_handler(player, pg.key.get_pressed(), sock)
        player.proj.refresh_position()

        #oppPlayer.fromJson(server_com.send_to_server(sock, player))
    
        screen.fill((0, 0, 0,))
        pg.draw.rect(screen, (0, 0, 255), pg.Rect(0, (HEIGHT / 2) - 1, WIDTH, 2))
        player.draw()
        oppPlayer.draw()
        pg.display.flip()

        pg.time.wait(10)

    sock.close()

main()
